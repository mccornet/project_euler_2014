# Even Fibonacci numbers
#
# Each new term in the Fibonacci sequence is
# generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence
# whose values do not exceed four million,
# find the sum of the even-valued terms.

summation = 0;

max_value = 4000000

Fibonacci_nr1 = 1
Fibonacci_nr2 = 2
Fibonacci_nr3 = 0

# offset for first two numbers not calculated by while loop
if (Fibonacci_nr1 % 2 == 0):
	summation += Fibonacci_nr1

if (Fibonacci_nr2 % 2 == 0):
	summation += Fibonacci_nr2

# rest with while loop
while True:
	# calc new fibonacci nr
	Fibonacci_nr3 = Fibonacci_nr2 + Fibonacci_nr1

	# stop this loop if out of range
	if not (Fibonacci_nr3 <= max_value):
		break

	# add even number to the sum
	if (Fibonacci_nr3 % 2 == 0):
		summation += Fibonacci_nr3

	# update nr1 and nr 2
	Fibonacci_nr1 = Fibonacci_nr2
	Fibonacci_nr2 = Fibonacci_nr3

print("De som is: {}".format(summation))



